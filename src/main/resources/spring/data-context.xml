<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringPlaceholdersInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context    http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx         http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Spring Data Configuration -->

    <!-- Load properties from file -->
    <context:property-placeholder location="classpath*:spring/environment.properties"/>

    <!-- Setup the DataSource and Connection Pool -->
    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:driverClassName="${database.driverClassName}"
          p:url="${database.url}"
          p:username="${database.username}"
          p:password="${database.password}"
          p:testOnBorrow="true"
          p:testOnReturn="true"
          p:testWhileIdle="true"
          p:timeBetweenEvictionRunsMillis="1800000"
          p:numTestsPerEvictionRun="3"
          p:minEvictableIdleTimeMillis="1800000"/>

    <!-- Setup the SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- DataSource for SessionFactory -->
        <property name="dataSource" ref="dataSource"/>

        <!-- Settings for Hibernate -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${database.dialect}</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <!-- Caching -->
                <!--<prop key="hibernate.cache.use_second_level_cache">true</prop>-->
                <!--<prop key="hibernate.cache.use_query_cache">true</prop>-->
                <!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>-->
                <!-- Schema Validation -->
                <!-- value="create" to build a new database on each run; -->
                <!-- value="update" to modify an existing database; -->
                <!-- value="create-drop" means the same as "create" but also drops tables when Hibernate closes; -->
                <!-- value="validate" makes no changes to the database -->
                <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
                <!-- Debug: show and format sql -->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>

        <!-- Entity-Classes -->
        <!--
        <property name="annotatedClasses">
            <list>
                <value>SomeEntities</value>
            </list>
        </property>
        -->
    </bean>

    <!-- Setup Transaction Manager -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          p:sessionFactory-ref="sessionFactory"
          p:dataSource-ref="dataSource"/>

    <!-- Setup and excute database updates -->
    <bean id="databaseUpdater"
          class="de.netpage.sample.database.update.spring.LiquibaseUpdateDatabaseService"
          p:changeTasks="database/update-database.properties"
          p:excuteOnLoad="true"/>

</beans>